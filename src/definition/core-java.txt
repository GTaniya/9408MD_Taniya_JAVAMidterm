***ANSWER ALL QUESTIONS BELOW***

What is a programming language?
Answer: A programming language is a set of commands, instructions, and other syntax use to create a software program

What is a JDK composed of? Define each components?
Answer: JDK composed of Java Runtime Environment (JRE), an interpreter/loader (Java), a compiler (javac), an archiver (jar), a documentation generator (Javadoc).
      * Java Runtime Environment (JRE) is provides the minimum requirements for executing a Java application; it consists of the Java Virtual Machine (JVM), core classes, and supporting files.
      * Java interpreter/loader converts high-level program statement into Assembly Level Language.  It is designed to read the input source program and then translate the source program instruction by instruction
      * Java Compiler is a program that takes the text file work of a developer and compiles it into a platform-independent Java file. Java compilers include the Java Programming Language Compiler (javac), the GNU Compiler for Java (GCJ), and the Eclipse Compiler for Java (ECJ)
      * Java archiver (jar) is a package file format typically used to aggregate many Java class files and associated metadata and resources (text, images, etc.) into one file for distribution
      * Java documentation generator (Javadoc) is used for generating Java code documentation in HTML format from Java source code, which requires documentation in a predefined format.

What is an IDE?
Answer: Integrated Development Environment(IDE), enables programmers to consolidate the different aspects of writing a computer program.
        IDEs increase programmer productivity by combining common activities of writing software into a single application: editing source code, building executables, and debugging.

What are some of the most popular Java IDEs available in the market?
Answer: IntelliJ IDEA, Eclipse, NetBeans, BlueJ, Oracle JDeveloper, and DrJava

Explain the entire java life cycle.
Answer:

What is a class?
Answer: A class is a user defined blueprint or prototype from which objects are created.  It represents the set of properties or methods that are common to all objects of one type

What is an object?
Answer: It is a basic unit of Object-Oriented Programming and represents the real life entities.  A typical Java program creates many objects, which as you know, interact by invoking methods.
        Object consists of State, Behavior and Identity.

What is the entry point of an application?
Answer:

Why is the main() static?
Answer:

Which class is the superclass of all classes?
Answer:

What is difference between path and classpath variables?
Answer:

What is the difference between an Interface and Abstract class?
Answer:

Can you make an Object from an Interface and Abstract class? If yes or no, how would you do it?
Answer:

What is Access Modifier?
Answer:

What is OOP? Define each OOP concept.
Answer:

What is Java Package and which package is imported by default?
Answer:

What is an API? List some API's that you have used so far.
Answer:

Does java support multiple inheritance? Why or why not?
Answer:

What is method overloading and when does it happen?
Answer:

Explain exceptions in java and how to handle them.
Answer:

What is static keyword? When and how do we use it?
Answer:

What is final keyword? When and how do we use it?
Answer:

Explain the difference between final, finally and finalize?
Answer:

What is a constructor?
Answer:

Can we have multiple constructors in a class?
Answer:

If we don't have a constructor declared, what is called during the object creation?
Answer:

What is "this" keyword in Java? When would we use it?
Answer:

What is "super" keyword in Java? What are some scenarios we would use it?
Answer:

What does JVM stand for?
Answer:

Is JVM platform independent?
Answer:

What version of Java are you using?
Answer:

What does JAR stand for?
Answer:

What is the difference between JDK and JVM?
Answer:

What is the difference between JVM and JRE?
Answer:

Explain the difference between compile-time and run-time?
Answer:

What is heap?
Answer:

How does Java manage its memory?
Answer:

What is the difference between String, StringBuffer and StringBuilder?
Answer:

What is Singleton class?
Answer:

What is Serialization and Deserialization?
Answer:

Explain the difference between While and Do..While loops?
Answer:

What is Enum?
Answer:

What is Iterator?
Answer:

Which one will take more memory: an int or Integer? Why?
Answer:

Why are Strings considered to be immutable in Java?
Answer:

What is constructor chaining in Java?
Answer:

The difference between Serial and Parallel Garbage Collector?
Answer:

What does JIT stands for?
Answer:

Explain the process of Java garbage collection?
Answer:

Can you guarantee the garbage collection process?
Answer:

What is the difference between stack and heap in Java?
Answer:

What is reflection in Java and why is it useful?
Answer:

What is multithreading in Java?
Answer:

What is synchronization in Java?
Answer:

What is a Framework?
Answer:

What are the testing Frameworks available in Java?
Answer:

What are jUnit and testNG?
Answer:

What are the dependencies for this project?
Answer:

What is dependency injection in Java?
Answer:

Explain what static binding and dynamic binding is?
Answer: